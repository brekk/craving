import File from "File"
import { either, equals, noop } from "Function"
import IO from "IO"
import List from "List"
import { fromMaybe } from "Maybe"
import String from "String"
import Wish from "Wish"

import Ext from "@/External"



main = (args) => {
  pipe(
    IO.pTrace("YO"),
    List.nth(1),
    fromMaybe(""),
    File.read,
    // read a file and group blocks
    map(
      pipe(
        String.split("\n\n"),
        map(String.split("\n")),
        map(List.reject(String.isEmpty)),
        List.reject(List.isEmpty),
      ),
    ),
    // find imports
    // map(
    //   pipe(
    //     List.filter(List.any(String.startsWith("import"))),
    //   ),
    // ),
    // find stuff with signatures
    // map(List.filter(List.any(String.contains("::")))),
    // just signatures
    map(map(List.filter(either(String.contains("::"), String.contains("->"))))),
    map(List.reject(List.isEmpty)),
    Wish.fulfill(
      pipe(
        IO.pTrace("BAD"),
        noop,
      ),
      pipe(
        IO.pTrace("GOOD"),
        noop,
      ),
    ),
  )(args)
}
